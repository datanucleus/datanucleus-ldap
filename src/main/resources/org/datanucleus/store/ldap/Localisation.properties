################################################################################
# Copyright (c) 2008 Andy Jefferson and others. All rights reserved. 
# This program and the accompanying materials are made available under 
# the terms of the DataNucleus License which accompanies this distribution.
#
# Contributions :
#
# Resources for org.datanucleus.store.ldap package
################################################################################

LDAP.DatastoreID=Class "{0}" : Datastore ID not supported for this datastore

LDAP.Retrieve.RelationTypeNotSupported=Cant obtain value for field "{0}" since relation type {1} is not supported for this datastore.
LDAP.Persist.RelationTypeNotSupported=Field "{0}" cannot be persisted because type {1} with relation type {2} is not supported for this datastore.

#
# Persistence operations
#
LDAP.Insert.MissingParentReference=Object "{0}" being inserted uses hierarchical mapping but its parent object doesn't exist
LDAP.Insert.ObjectWithIdAlreadyExists=Object "{0}" being inserted has id "{1}" yet an object with this id already exists in the datastore!
LDAP.Insert.SheetCreated=Persist of object "{0}" required worksheet "{1}" which didnt exist. Created it.
LDAP.Insert.Start=Object "{0}" being inserted into LDAP with all reachable objects
LDAP.Insert.ObjectPersisted=Object "{0}" (id="{1}) persisted to LDAP
LDAP.Insert.ObjectPersistedWithVersion=Object "{0}" (id="{1}) persisted to LDAP with version "{2}"
LDAP.Update.Start=Object "{0}" (id="{1}") being updated in LDAP (for fields "{2}") with all reachable objects
LDAP.Delete.Start=Object "{0}" (id="{1}") being deleted from LDAP with all dependent objects
LDAP.DeleteRecursive.Start=Object "{0}" (id="{1}") being deleted recursively from LDAP
LDAP.Delete.ObjectDeleted=Object "{0}" (id="{1}") has been deleted
LDAP.Fetch.Start=Object "{0}" (id="{1}") being retrieved from LDAP
LDAP.Locate.Start=Object "{0}" (id="{1}") being located in LDAP
LDAP.ExecutionTime=Execution Time = {0} ms

# JNDI operations
LDAP.JNDI.DeleteDnReference=Delete DN reference from "{0}" to "{1}" in LDAP
LDAP.JNDI.AddDnReference=Add DN reference from "{0}" to "{1}" in LDAP
LDAP.JNDI.DeleteAttributeReference=Delete attribute reference "{0}:{1}" from "{2}" in LDAP
LDAP.JNDI.AddAttributeReference=Add attribute reference "{0}:{1}" to "{2}" in LDAP
LDAP.JNDI.createSubcontext=DirContext.createSubcontext(dn="{0}", attrs="{1}");
LDAP.JNDI.modifyAttributes=DirContext.modifyAttributes(dn="{0}", mod="{1}", attrs="{2}");
LDAP.JNDI.destroySubcontext=DirContext.destroySubcontext(dn="{0}");
LDAP.JNDI.rename=DirContext.rename(oldDn="{0}", newDn="{1}");
LDAP.JNDI.getAttributes=DirContext.getAttributes(dn="{0}", attrIds="{1}"); -> {2}
LDAP.JNDI.search=DirContext.search(base="{0}", filter="{1}", scope="{2}")

#
# Query operations
#
LDAP.Query.NativeQueryFailed=Native query execution using LDAP filters failed, fall back to in-memory filter evaluation.